package hello;


import java.util.List;


import org.joda.time.DateTimeZone;
import org.joda.time.format.ISODateTimeFormat;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.bind.annotation.RestController;

@RestController
@RequestMapping("/camera")
public class RecordController {
	
	//private AtomicLong counter = new AtomicLong();

    @Autowired
    RecordRepository rep;
    @RequestMapping(value="store") //controller for store
   
    public  String  camera (@RequestParam(value="cam",required=true) String cameraid,
    		@RequestParam(required=true, value="ts") String timestamp,
            @RequestParam(value="fn",required=true) String filename,
            @RequestParam(value="location",required=true, defaultValue="Bedok01") String locationid)
    {
    	try {
    		Record cam = new Record(cameraid, ISODateTimeFormat.dateTime().withZone(DateTimeZone.UTC).parseDateTime(timestamp), filename, locationid);
    		rep.save(cam);
            return "OK";
        }catch(Exception ex){
            String errorMessage;
            errorMessage = ex + " <== error";
            return ("error: " + ex.getMessage());}
    }
   @RequestMapping(value="list") //controller for list
   public List<Record> getList() {
    	    List<Record> recordList = rep.findAll(); 
    	   
    	    return recordList;
   }
   
   @RequestMapping(value = "/camera/list/{id}", method = RequestMethod.DELETE)
   public @ResponseBody int deleteTechnology(@PathVariable("id") Integer id) {
          System.out.println(id);
          return 1;
   }
}

   /* @RequestMapping("/camera-javaconfig")
    public @ResponseBody Record greetingWithJavaconfig(@RequestParam(required=false, defaultValue="World") String cameraid,
    		@RequestParam(required=false, defaultValue=Date) String datetime,
    	    @RequestParam(required=false, defaultValue="dog") String filename) {
      //  System.out.println("==== in greeting ====");
        return new Record(counter.incrementAndGet(), cameraid, datetime,filename);
    }*/
